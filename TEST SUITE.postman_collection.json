{
	"info": {
		"_postman_id": "f151036b-038d-4df7-a3fb-797e9b6e4961",
		"name": "TEST SUITE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21387766"
	},
	"item": [
		{
			"name": "Create User - valid details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Status is active\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"active\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "e0a0aa0953319b81c019164acded61c9a23acd9208d053c09ba3de32c609c5f4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2214,\r\n        \"name\": \"Vicky Test\",\r\n        \"email\": \"vickytest@gmail.com\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User - blank details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Error message for already registered email address\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test(\"Email, Name and Status field validation\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"can't be blank\", \"email\", \"name\",\"status\" );\r",
							"});\r",
							"pm.test(\"Gender field validation\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"can't be blank, can be male or female\", \"gender\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "e0a0aa0953319b81c019164acded61c9a23acd9208d053c09ba3de32c609c5f4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2214,\r\n        \"name\": \"\",\r\n        \"email\": \"\",\r\n        \"gender\":\"\",\r\n        \"status\": \"\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/public/v2/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User - old email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Error message for already registered email address\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test(\"Email field validation\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"has already been taken\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "e0a0aa0953319b81c019164acded61c9a23acd9208d053c09ba3de32c609c5f4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2214,\r\n        \"name\": \"Vicky Test\",\r\n        \"email\": \"vickytest@gmail.com\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/public/v2/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User - No ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Authentication failed\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Authentication failed\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "e0a0aa0953319b81c019164acded61c9a23acd9208d053c09ba3de32c609c5f4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": ,\r\n        \"name\": \"Deeptendu Varma\",\r\n        \"email\": \"deeptendu_varma@herzog-bruen.biz\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/public/v2/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User - Invalid gender",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"pm.test(\"Gender validation\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"can't be blank, can be male or female\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "e0a0aa0953319b81c019164acded61c9a23acd9208d053c09ba3de32c609c5f4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2215,\r\n        \"name\": \"Deeptendu Varma\",\r\n        \"email\": \"deeptendu23_varma@herzog-bruen.biz\",\r\n        \"gender\": \"sgrg\",\r\n        \"status\": \"active\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": [
				{
					"name": "Create User - Invalid gender",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2215,\r\n        \"name\": \"Deeptendu Varma\",\r\n        \"email\": \"deeptendu23_varma@herzog-bruen.biz\",\r\n        \"gender\": \"sgrg\",\r\n        \"status\": \"active\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/public/v2/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"status": "Unprocessable Entity",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sat, 23 Jul 2022 15:52:45 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "Referrer-Policy",
							"value": "strict-origin-when-cross-origin"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "90"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "89"
						},
						{
							"key": "X-RateLimit-Reset",
							"value": "1"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache"
						},
						{
							"key": "X-Request-Id",
							"value": "ddc58813-0b4d-4a81-a3a3-b40dc1c32bec"
						},
						{
							"key": "X-Runtime",
							"value": "0.017097"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=63072000; includeSubDomains"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Report-To",
							"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=OEQvmpDkDnNy7irRS4g4p%2BFlAo1%2F87Hs1aWBj%2FBhfQ1EaLyKSK89d%2FFid6%2FValuHjth%2FrF7v71R4NQ685EBPODEjH0tUyd%2FKz9tUOT1TFTIMXaxihZ7A%2FTeO894%2BQAE%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "NEL",
							"value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "72f595c3d8337756-LHR"
						},
						{
							"key": "alt-svc",
							"value": "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"field\": \"gender\",\n        \"message\": \"can't be blank, can be male or female\"\n    }\n]"
				}
			]
		},
		{
			"name": "Create User - Invalid status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"pm.test(\"Status validation\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"can't be blank\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "e0a0aa0953319b81c019164acded61c9a23acd9208d053c09ba3de32c609c5f4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2215,\r\n        \"name\": \"Deeptendu Varma\",\r\n        \"email\": \"deeptendu564_varma@herzog-bruen.biz\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"rth\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": [
				{
					"name": "Create User - Invalid status",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2215,\r\n        \"name\": \"Deeptendu Varma\",\r\n        \"email\": \"deeptendu564_varma@herzog-bruen.biz\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"rth\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"status": "Unprocessable Entity",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Sat, 23 Jul 2022 15:55:03 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "Referrer-Policy",
							"value": "strict-origin-when-cross-origin"
						},
						{
							"key": "X-RateLimit-Limit",
							"value": "90"
						},
						{
							"key": "X-RateLimit-Remaining",
							"value": "89"
						},
						{
							"key": "X-RateLimit-Reset",
							"value": "1"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache"
						},
						{
							"key": "X-Request-Id",
							"value": "0470e24e-9c8e-4242-b77c-9197e2f8f0c4"
						},
						{
							"key": "X-Runtime",
							"value": "0.026194"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=63072000; includeSubDomains"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Report-To",
							"value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=M6TQsknIdwEyjoZQJs0VYioJxFvARClZZvFXMzEpQB9TH4Rzd1xoOXtRawUwRdhz9mrCSZQEJiZJJFOniM8ez%2FLL8QEJP8wlFvHni0%2BT68XPDLS4TJHi3S3wAWzI2Ic%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "NEL",
							"value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "72f599216fac7756-LHR"
						},
						{
							"key": "alt-svc",
							"value": "h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"field\": \"status\",\n        \"message\": \"can't be blank\"\n    }\n]"
				}
			]
		},
		{
			"name": "Create User - Invalid Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"pm.test(\"Name field should not take numbers\", function () {\r",
							"    pm.expect(pm.response.text(2)).to.include(\"name should be in letters\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "e0a0aa0953319b81c019164acded61c9a23acd9208d053c09ba3de32c609c5f4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2215,\r\n        \"name\": \"456\",\r\n        \"email\": \"deeptendu6575_varma@herzog-bruen.biz\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"active\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/public/v2/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Gender validation\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"female\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/public/v2/users",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a user",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/public/v2/users/?id=2215",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						""
					],
					"query": [
						{
							"key": "id",
							"value": "2215"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "e0a0aa0953319b81c019164acded61c9a23acd9208d053c09ba3de32c609c5f4",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"id\": 2638,\r\n        \"name\": \"Kalyani Embranthiri\",\r\n        \"email\": \"embranthirigg_kalyani@walter-nader.org\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"inactive\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/public/v2/users/2214",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"2214"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/public/v2/users/28?id=2215",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"28"
					],
					"query": [
						{
							"key": "id",
							"value": "2215"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a deleted user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correct error message\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Resource not found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Resource not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/public/v2/users/2214",
					"host": [
						"{{url}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						"2214"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://gorest.co.in"
		},
		{
			"key": "token",
			"value": "e0a0aa0953319b81c019164acded61c9a23acd9208d053c09ba3de32c609c5f4"
		}
	]
}